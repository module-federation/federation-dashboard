name: Release

on:
  push:
    branches: [authentication]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup environment
        id: setups
        run: |-
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          echo "::set-output name=node_version::$(cat .nvmrc)"

      - name: Setup Node ${{ steps.setups.outputs.node_version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ steps.setups.outputs.node_version }}

      - name: Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.setups.outputs.yarn_cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-node-${{ steps.setups.outputs.node_version }}

      - run: yarn --frozen-lockfile

      - name: Docker Login
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Perform builds
        env:
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          SESSION_COOKIE_SECRET: ${{ secrets.SESSION_COOKIE_SECRET }}
        run: |-
          rm -fr dashboard-fe/node_modules
          yarn workspace @module-federation/dashboard run docker:build

#         yarn workspace @module-federation/dashboard run docker:push

#      - name: Create Release or Publish
#        uses: changesets/action@master
#        with:
#          publish: yarn release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
